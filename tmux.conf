# I use Ctrl-s (as in SSH or Server) as the prefix on nested tmux sessions
# on servers. Locally I keep the default Ctrl-b prefix.
unbind C-s

# Set the alternative prefix to Ctrl-s if we're inside an SSH session
if-shell '[ -n "$SSH_TTY" ]' 'set -g prefix2 C-s ; bind C-s send-prefix2'

set -g status off # FIXME: Design a nice status line
set -g history-limit 20000
set -g allow-passthrough on
set -g update-environment TERM
set -g update-environment EDITOR
set -g default-terminal "tmux-256color"

# Enable support for remote copy to the local clipboard with ocs52 protocol.
# Make sure you are using a terminal that supports it, such as iTerm2.
set -as terminal-overrides ',*:SetClipboard=on'
set -s set-clipboard on

# If the terminal is starting tmux as a shell, tmux itself won't have the
# normal shell environment, but it still needs the 'tmux' command in its path.
set-environment -g PATH "/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin:$PATH"

# Some defaults taken from oh-my-tmux
set -s escape-time 10           # faster command sequences
set -sg repeat-time 600         # increase repeat timeout
set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows
setw -g automatic-rename on     # rename window to reflect current program
set -g renumber-windows on      # renumber windows when a window is closed
set -g set-titles on            # set terminal title
set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time
set -g monitor-activity on
set -g visual-activity off

# Enable vi style navigation
setw -g mode-keys vi

# Switch pane with prefix + h/j/k/l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane with prefix + shift-h/j/k/l (repeatable)
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Split using the same keys as with the Ctrl-w prefix in Vim
bind v split-window -h  # Vertical split
bind s split-window -v  # Horizontal split
bind _ resize-pane -Z   # Make current pane full-screen
bind = select-layout -E # Make all panes equal size

# prefix + [ (or å) starts copy mode at cursor position
# Make prefix + ' start copy mode at the start of the line above
bind \' copy-mode \; send -X start-of-line \; send -X cursor-up

# Use v to start selecting and y to copy in copy-mode, like in Vim
# Shift-v already selects the whole line
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# Press p in copy-mode to copy then paste the current selection
bind -T copy-mode-vi p send -X copy-selection-and-cancel \; run -b 'tmux paste-buffer'

# Press prefix + Shift-p to choose a buffer to paste from
bind P choose-buffer

# Esc in copy-mode deselects if something is selected, otherwise exits copy-mode
bind -T copy-mode-vi Escape if -F '#{selection_present}' 'send-keys -X clear-selection' 'send-keys -X cancel'

# Make tmux a bit more usable with Swedish keymap
bind å copy-mode     # Like [ = Start copy-mode at cursor position
bind ä paste-buffer  # Like ] = Paste
bind Å swap-pane -U  # Like { = Move current pane up/left
bind Ä swap-pane -D  # Like } = Move current pane down/right
bind ö last-pane     # Like ; = Go back and forth between the last two panes
bind -T copy-mode-vi € send -X end-of-line # Like $ = Go to end of the line

# Enable mouse support by default and toggle it on/off with prefix + m
set -g mouse on
bind m if -F '#{mouse}' \
  'set -g mouse off ; display-message "Mouse OFF"' \
  'set -g mouse on ; display-message "Mouse ON"'

# Don't require releasing Ctrl after prefix for these basic commands
bind C-c new-window
bind C-n next-window
bind C-p previous-window
bind C-z resize-pane -Z   # Toggle full-screen pane

# Create a new session with prefix + Shift-s and give it a name
bind S command-prompt -p "New session name:" "new-session -ds '%%'"

# Select session with prefix + Ctrl-s
bind C-s choose-tree -Zs

# Switch to the previous session when the current one exits
set -g detach-on-destroy no-detached



# Used with astrocommunity.terminal-integration.vim-tmux-navigator in
# AstroNvim for cross-tmux/vim Ctrl-h/j/k/l pane navigation.
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -l'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
