# Only the very latest tmux versions are currently officially supported by
# this tmux.conf, because I don't personally use older versions than 3.5.

# I use Ctrl-s (as in SSH Server Session) as the prefix on nested tmux
# sessions on servers. Keep the default Ctrl-b prefix locally.
#
# Set the prefix to Ctrl-s if we're inside an SSH session
unbind C-s
if-shell '[ -n "$SSH_TTY" ]' 'set -g prefix C-s ; bind C-s send-prefix ; unbind C-b'

set -g status off # FIXME: Design a nice status line
set -g history-limit 20000
set -g allow-passthrough on
set -g update-environment TERM
set -g update-environment EDITOR

# FIXME: document
set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ',*:Tc:sitm=\E[3m,ritm=\E[23m,Smulx=\E[4::%p1%dm'

# Enable support for remote copy to the local clipboard with ocs52 protocol
# if you are using a terminal that supports it, such as iTerm2.
set -as terminal-overrides ',*:SetClipboard=on'
set -s set-clipboard on

# If the terminal is starting tmux as a shell, tmux itself won't have the
# normal shell environment, but it still needs the 'tmux' command in its path.
set-environment -g PATH "$HOME/bin:$HOME/.local/bin:/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin:/usr/local/bin:/snap/bin:$PATH"

# Some defaults taken from oh-my-tmux
set -s escape-time 10           # faster command sequences
set -sg repeat-time 600         # increase repeat timeout
set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows
setw -g automatic-rename on     # rename window to reflect current program
set -g renumber-windows on      # renumber windows when a window is closed
set -g set-titles on            # set terminal title
set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time
set -g monitor-activity on
set -g visual-activity off

# Enable vi style navigation
setw -g mode-keys vi

# Switch pane with prefix + h/j/k/l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane with prefix + shift-h/j/k/l (repeatable)
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Split using the same keys as with the Ctrl-w prefix in Vim
bind v split-window -h  # Vertical split
bind s split-window -v  # Horizontal split
bind _ resize-pane -Z   # Make current pane full-screen
bind = select-layout -E # Make all panes equal size

# prefix + [ (or ö) starts copy mode at cursor position
# Make prefix + ' start copy mode at the start of the line above the prompt
bind \' copy-mode \; send -X start-of-line \; send -X cursor-up \; send -X cursor-up

# Scroll up and down with Shift+J/K in copy mode
bind -T copy-mode-vi J send -X page-down
bind -T copy-mode-vi K send -X page-up

# Use v to start selecting and y to copy in copy-mode, like in Vim
# Shift-v already selects the whole line
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# Press p in copy-mode to copy then paste the current selection
bind -T copy-mode-vi p send -X copy-selection-and-cancel \; run -b 'tmux paste-buffer'

# Press prefix + Shift-p to pick an older copied text to paste
bind P choose-buffer

# Esc in copy-mode deselects if something is selected, otherwise exits copy-mode
bind -T copy-mode-vi Escape if -F '#{selection_present}' 'send-keys -X clear-selection' 'send-keys -X cancel'

# Make tmux a bit more usable with Swedish keymap
bind å last-pane     # Like ; = Go back and forth between the last two panes
bind ö copy-mode     # Like [ = Start copy-mode at cursor position
bind ä paste-buffer  # Like ] = Paste
bind Ö swap-pane -U  # Like { = Move current pane up/left
bind Ä swap-pane -D  # Like } = Move current pane down/right
bind -T copy-mode-vi € send -X end-of-line # Like $ = Go to end of the line

# Enable mouse support by default and toggle it on/off with prefix + m
set -g mouse on
bind m if -F '#{mouse}' \
  'set -g mouse off ; display-message "Mouse OFF"' \
  'set -g mouse on ; display-message "Mouse ON"'

# Don't require releasing Ctrl after prefix for these often used commands
bind C-c new-window       # Create a new window
bind C-n next-window      # Switch to the next window
bind C-p previous-window  # Switch to the previous window
bind C-z resize-pane -Z   # Toggle full-screen pane

# Add a new session with prefix + Shift-S and give it a name
bind S command-prompt -p "New session name:" "run-shell 'NS=\"%%\"; tmux new -ds \"\$NS\"; tmux switch-client -t \"\$NS\"'"

# Select session with prefix + s
bind s choose-tree -Zs
# bind a choose-tree -Zs \; run-shell 'tmux-hook session-changed'

# Switch back and forth between the last two sessions with prefix + Ctrl-s
bind-key C-s switch-client -l

# Switch to the previous session when the current one exits instead of detaching.
set -g detach-on-destroy no-detached

set-hook -g session-created        'run-shell "tmux-hook session-created #S"'
set-hook -g session-closed         'run-shell "tmux-hook session-closed #S"'
set-hook -g client-attached        'run-shell "tmux-hook session-attached #S"'
set-hook -g client-detached        'run-shell "tmux-hook session-detached #S"'
set-hook -g client-session-changed 'run-shell "tmux-hook client-session-changed #S"'

# Used with astrocommunity.terminal-integration.vim-tmux-navigator in
# AstroNvim for seamless cross-tmux/vim Ctrl-Shift-h/j/k/l pane navigation
# (no prefix needed).
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-H' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-J' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-K' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-L' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-;' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -l'
bind-key -n 'C-ö' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -l'
bind-key -T copy-mode-vi 'C-H' select-pane -L
bind-key -T copy-mode-vi 'C-J' select-pane -D
bind-key -T copy-mode-vi 'C-K' select-pane -U
bind-key -T copy-mode-vi 'C-L' select-pane -R
bind-key -T copy-mode-vi 'C-;' select-pane -l
bind-key -T copy-mode-vi 'C-ö' select-pane -l
